name: Build and Upload to PyPI

on: [push, pull_request]

jobs:
  build_wheels:

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [ '3.8', '3.9' ]

    name: Build wheels on ${{ matrix.os }}

    runs-on: ${{ matrix.os }}

    env:
      CIBW_SKIP: pp* *-win32 *musllinux*
      CIBW_ARCHS: auto64
      CIBW_BEFORE_BUILD_LINUX: |
        apt install -y cmake wget
        bash {project}/ci/embree_linux.bash
      CIBW_BEFORE_BUILD_MACOS: |
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
        brew install wget bash cmake
        bash {project}/ci/embree_macos.bash
      CIBW_BEFORE_BUILD_WINDOWS: |
        pip install delvewheel
        {project}\\ci\\embree_windows.bat
      CIBW_REPAIR_WHEEL_COMMAND_LINUX: |
        LD_LIBRARY_PATH=~/embree/lib:$LD_LIBRARY_PATH
        auditwheel repair -w {dest_dir} {wheel}
      CIBW_REPAIR_WHEEL_COMMAND_MACOS: |
        LD_LIBRARY_PATH=~/embree/lib:$LD_LIBRARY_PATH
        delocate-listdeps {wheel} && delocate-wheel --require-archs {delocate_archs} -w {dest_dir} {wheel}
      CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: >
        delvewheel repair
        --add-path %USERPROFILE%\\embree\\bin
        --no-mangle tbb.dll;tbbmalloc.dll;embree.dll
        -w {dest_dir} {wheel}

    steps:
      - uses: actions/checkout@v3

      - name: Install Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==2.4.0

      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v1
        with:
          name: wheels
          path: ./wheelhouse

      - name: Upload To PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          pip install twine
          twine upload ./wheelhouse/*